kubectl get po --all-namespaces | wc
kubectl run nginx --image=nginx --generator=run-pod/v1
kubectl delete rs replicaset-1 replicaset-2
after editing live rs, then delete pods
for scaling up or down jus update the rs configuration
kubectl get po -n research
db-service.dev.svc.cluster.local
kubectl run redis --image redis:alpine --labels tier=db --generator run-pod/v1
kubectl expose pod redis --name redis-service --port 6379
kubectl run webapp --image kodekloud/webapp-color --replicas 3
kubectl create deployment webapp --image=kodekloud/webapp-color
kubectl scale deployment/webapp --replicas=3
kubectl expose deployment webapp --type=NodePort --port=8080 --name=webapp-service --dry-run -o yaml > webapp-service.yaml to generate a service definition file. Then edit the nodeport in it and create a service.
kubectl get nodes -o json | jq .items[].spec.taints
pod will be in pending state, when there is no scheduler pod in the kube-system namespace
pod spec > nodeName to manually schedule the Pod on a node when the scheduler Pod is not present in kube-system
nodeName master would launch it on the master tooo
kubectl get po -l env=dev
kubectl get po --selector env=dev
kubectl get po -l env=prod,tier=frontend,bu=finance
pods are launched by default on master coz of the default taint
pod sepc
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: color
                operator: In
                values:
                - blue
operator: Exists can be used when there is no value
kubectl get po | grep master # for standalone
ps --aux | grep kubelet # check for --config-file=/var/lib/kubelet/config.yaml
cat /var/lib/kubelet/config.yaml | grep static  # staticPodPath: /etc/kubernetes/manifests
above cmd can be run on individual nodes to find the manifests file on the node

kubectl run --restart=Never --image=busybox static-busybox --dry-run -o yaml --command -- sleep 1000 > /etc/kubernetes/manifests/static-busybox.yaml

kubectl describe deploy deployname | grep StrategyUpdate  # RollingUpdate
Pods are upgraded few at a time when a deployment is upgraded
# RollingUpdateStrategy:  25% max unavailable, 25% max surge

deployment spec strategy type Recreate and delete properties of Rollingupdate 

Pod container spec > command: - sleep - "5000"  timer must be in quotes
Dockerfile -- ENTRYPOINT list shows startup commands, e.g. ["python", "app.py"]
and arguments could be given through CMD e.g. ["--color", "red"] so that would become python app.py --color red
the CMD arguments can be overridden if there is Pod spec that has Command arguments

secret type - kubernetes.io/service-account-token
kubectl get po,svc

kubectl create secret generic db-secret --from-literal=DB_Host=sql01 --from-literal=DB_User=root --from-literal=DB_Password=password123

default taint on master

kubeadm upgrade plan
upgrade one minor version at a time
backup etcd
kubectl drain mastername --ignore-daemonsets
apt install kubeadm=1.12.0-00
kubeadm upgrade apply  v1.12.0
apt install kubelet=1.12.0-00
kubectl uncordon nodename

for nodes other than master
apt install kubeadm=1.12.0-00'
kubeadm upgrade node config --kubelet-version v1.12.0
apt install kubelet=1.12.0-00
kubelet --version | cut -d ' ' -f 2

kubectl describe po etcd-master -n kube-system | grep listen-client-urls
kubectl describe po etcd-master -n kube-system | grep cert-file  # for server cert and peer cert
kubectl describe po etcd-master -n kube-system | grep cacert  # for ca cert
etcd server port 2379
etcd peer port 2380
ETCDCTL_API=3 etcdctl snapshot save /tmp/snapshotname.db --cacert /etc/kubernetes/pki/etcd/ca.crt \
--cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key \
--endpoints https://127.0.0.1:2379
ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt \
     --name=master \
     --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key \
     --data-dir /var/lib/etcd-from-backup \
     --initial-cluster=master=https://127.0.0.1:2380 \
     --initial-cluster-token etcd-cluster-1 \
     --initial-advertise-peer-urls=https://127.0.0.1:2380 \
     snapshot restore /tmp/snapshot-pre-boot.db

cat akshay.csr | base64
apiVersion: certificates.k8s.io/v1beta1
kind: CertificateSigningRequest
metadata:
  name: csrname
spec:
  groups:
  - system: authenticated
  request:
  <base64 of csr>
  usages:
  - digital signature
  - encipherment
  - server auth
kubectl get csr
kubectl certificate approve akshay
requestor: system:node:master
groups: system:masters system:authenticated
spec can also have username
kubectl get csr -o yaml
kubectl certificate deny agent-smith
kubectl delete csr agent-smith
